---
import type { CollectionEntry } from "astro:content";
import BaseHead from "../components/BaseHead.astro";
import RecipeFooter from "../components/RecipeFooter.astro";
import RecipeHeader from "../components/RecipeHeader.astro";

type Props = CollectionEntry<"recipe">["data"];

const { title, description, pubDate, updatedDate, heroImage } = Astro.props;
const background = heroImage ? `url('${heroImage}')` : "none";
---

<html lang="en">
  <head>
    <BaseHead title={title} description={description} />
    <style define:vars={{ background }}>
      .hero-image {
        width: 100%;

        background-image: var(--background);

        /* Full height */
        height: 100%;

        /* A4 max heigh */
        max-height: 842px;

        /* Center and scale the image nicely */
        background-position: left;
        background-repeat: no-repeat;
        background-size: cover;
      }
    </style>

    <style>
      article {
        display: flex;
        align-items: stretch;
        margin: auto;
        /* background-color: blueviolet; */
      }

      .left {
        width: 50%;
      }

      .right {
        width: 50%;
      }

      .hero-image {
        width: 100%;
      }

      .hero-image img {
        display: block;
        margin: 0 auto;
        max-width: unset;
      }

      .prose {
        padding: 0;
        padding-right: 1em;
        max-width: 100%;
        margin: 0 auto;
      }

      .title {
        margin-bottom: 1em;
        padding: 1em 0;
        text-align: center;
        line-height: 1;
      }
      .title h1 {
        margin: 0 0 0.5em 0;
      }
      .date {
        margin-bottom: 0.5em;
        color: rgb(var(--gray));
      }
      .last-updated-on {
        font-style: italic;
      }
      .paper-margins {
        position: relative;
      }
    </style>
  </head>

  <body>
    <div class="paper-margins"></div>
    <RecipeHeader title={title} />
    <main>
      <article>
        <div class="left">
          <div class="prose">
            <slot />
          </div>
        </div>

        <div class="right">
          <div class="hero-image">
            {
              heroImage && (
                // <img width={1020} height={510} src={heroImage} alt="" />
                <div class="hero-image-bg" />
              )
            }
          </div>
        </div>
      </article>
    </main>
    <RecipeFooter />
    <script>
      const getDPI = () => {
        const div = document.createElement("div");
        div.style.width = "1in";
        div.style.height = "1in";
        div.style.position = "absolute";
        div.style.left = "-100%";
        div.style.top = "-100%";
        document.body.appendChild(div);
        const dpi = div.offsetHeight;
        document.body.removeChild(div);
        return dpi;
      };

      const dpi = getDPI();
      const a4InPixels = {
        width: Math.ceil(dpi * 8.27),
        height: Math.ceil(dpi * 11.69),
      };

      const pageOverlayStyle = (pageNumber: number) => `
          position: absolute;
          top: ${pageNumber * a4InPixels.height - 2}px;
          left: 0;
          right: 0;
          bottom: 0;
          background: rgba(255, 0, 0, 0.1);
          margin: 0 auto;
          border-bottom: 1px solid cyan;
          width: ${a4InPixels.width - 2}px;
          height: ${a4InPixels.height - 2}px;
        `;

      const paperMargins = document.querySelector(".paper-margins");
      if (!paperMargins) {
        alert('No ".paper-margins" element found');
        throw new Error('No ".paper-margins" element found');
      }

      const pages = Math.ceil(document.body.scrollHeight / a4InPixels.height);
      if (pages < 1) {
        alert("No content to print");
        throw new Error("No content to print");
      }

      for (let i = 0; i < pages; i++) {
        const margins = document.createElement("div");
        margins.setAttribute("style", pageOverlayStyle(i));
        const text = document.createElement("p");
        text.textContent = `Page ${i + 1} - A4 size: ${a4InPixels.width} x ${
          a4InPixels.height
        } - DPI: ${dpi} - Scrollable height: ${
          document.body.scrollHeight
        } - Scrollable width ${document.body.scrollWidth} - Pages: ${pages}`;
        margins.appendChild(text);
        // paperMargins.appendChild(margins);
      }

      const main = document.querySelector("main");
      if (!main) {
        alert('No "main" element found');
        throw new Error('No "main" element found');
      }
      // main.style.width = `calc(${a4InPixels.width}px - 2em)`;
    </script>
  </body>
</html>
